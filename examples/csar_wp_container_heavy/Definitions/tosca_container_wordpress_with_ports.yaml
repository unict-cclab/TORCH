tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  TOSCA simple profile with Wordpress and MySQL on separate deployment units.

repositories: #PM: added docker_hub definition
  docker_hub: https://registry.hub.docker.com/

imports:
  - tosca_container_types.yaml
  - tosca_container_wordpress_non_normative.yaml

topology_template:
  inputs:
    mysql_root_pwd:
      type: string
      description: Root password for MySQL.
      default: root
    mysql_volume_size:
      type: scalar-unit.size
      description: Memory size for the mysql server.
      default: 10 GB
    mysql_port:
      type: integer
      description: MySQL container port
      default: 3306
    mysql_location:
      type: string
      description: Location for mysql mount.
      default: /var/lib/mysql
    wp_db_host:
      type: string
      description: Node of the db host
      default: mysql_container
    wp_host_port:
      type: integer
      description: The host port that maps to port 80 of the WordPress container.
      default: 80
    wp_volume_size:
      type: scalar-unit.size
      description: Memory size for the wordpress server.
      default: 2 GB
    wp_location:
      type: string
      description: Location for wordpress mount.
      default: /var/www/html

  relationship_templates:
    tosca.relationships.MySQLAttachesToVolume:
      type: tosca.relationships.AttachesTo
      properties:
        location: { get_input: mysql_location }

    tosca.relationships.WordpressAttachesToVolume:
      type: tosca.relationships.AttachesTo
      properties:
        location: { get_input: wp_location }

  node_templates:
    mysql_container:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du:
      type: tosca.nodes.Container.Runtime

    wordpress_container:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du
        - WORDPRESS_DB_HOST: mysql_container
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du:
      type: tosca.nodes.Container.Runtime

    mysql_container_2:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_2
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_2:
      type: tosca.nodes.Container.Runtime

    wordpress_container_2:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_2
        - WORDPRESS_DB_HOST: mysql_container_2
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_2:
      type: tosca.nodes.Container.Runtime

    mysql_container_3:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_3
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_3:
      type: tosca.nodes.Container.Runtime

    wordpress_container_3:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_3
        - WORDPRESS_DB_HOST: mysql_container_3
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_3:
      type: tosca.nodes.Container.Runtime

    mysql_container_4:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_4
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_4:
      type: tosca.nodes.Container.Runtime

    wordpress_container_4:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_4
        - WORDPRESS_DB_HOST: mysql_container_4
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_4:
      type: tosca.nodes.Container.Runtime

    mysql_container_5:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_5
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_5:
      type: tosca.nodes.Container.Runtime

    wordpress_container_5:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_5
        - WORDPRESS_DB_HOST: mysql_container_5
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_5:
      type: tosca.nodes.Container.Runtime

    mysql_container_6:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_6
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_6:
      type: tosca.nodes.Container.Runtime

    wordpress_container_6:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_6
        - WORDPRESS_DB_HOST: mysql_container_6
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_6:
      type: tosca.nodes.Container.Runtime

    mysql_container_7:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_7
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_7:
      type: tosca.nodes.Container.Runtime

    wordpress_container_7:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_7
        - WORDPRESS_DB_HOST: mysql_container_7
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_7:
      type: tosca.nodes.Container.Runtime

    mysql_container_8:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_8
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_8:
      type: tosca.nodes.Container.Runtime

    wordpress_container_8:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_8
        - WORDPRESS_DB_HOST: mysql_container_8
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_8:
      type: tosca.nodes.Container.Runtime

    mysql_container_9:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_9
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_9:
      type: tosca.nodes.Container.Runtime

    wordpress_container_9:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_9
        - WORDPRESS_DB_HOST: mysql_container_9
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_9:
      type: tosca.nodes.Container.Runtime

    mysql_container_10:
      type: tosca.nodes.Container.Database.MySQL
      requirements:
        - host: mysql_du_10
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.MySQLAttachesToVolume
            node: volume
      capabilities:
        database_endpoint:
          properties:
            port: 3306
      artifacts:
        mysql_image:
          file: mysql:5.7
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      properties:
        port: { get_input: mysql_port }
        password: { get_input: mysql_root_pwd }
      interfaces:
        Standard:
          create:
            implementation: mysql_image
            inputs:
              port: { get_property: [ SELF, port ] }
              MYSQL_ROOT_PASSWORD: { get_property: [ SELF, password ] }

    mysql_du_10:
      type: tosca.nodes.Container.Runtime

    wordpress_container_10:
      type: tosca.nodes.Container.WebApplication.Wordpress
      requirements:
        - host: wordpress_du_10
        - WORDPRESS_DB_HOST: mysql_container_10
        - volume: #PM: missed mandatory requirement
            relationship: tosca.relationships.WordpressAttachesToVolume
            node: volume
      capabilities:
        app_endpoint:
          properties:
            port: 80
      artifacts:
        wp_image:
          file: wordpress
          type: tosca.artifacts.Deployment.Image.Container.Docker
          repository: docker_hub
      interfaces:
        Standard:
          create:
            implementation: wp_image
            inputs:
              port: { get_input: wp_host_port }
              WORDPRESS_DB_PASSWORD: { get_property: [mysql_container, password] }

    wordpress_du_10:
      type: tosca.nodes.Container.Runtime

    infrastructure: #PM: added to filfull all missed but mandatory host requirements
      type: tosca.nodes.Compute

    volume: #PM: added to filfull all missed but mandatory volume requirements
      type: tosca.nodes.BlockStorage
      properties:
        size: 10 GB
